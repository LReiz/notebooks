126c126
<                 elif opcode == 'define':
---
>                 elif opcode.startswith('define'):
164c164
<                 if _opcode == 'define':
---
>                 if _opcode.startswith('define'):
216c216
<         idx = -1
---
>         # idx = 0
219c219
<             self.vars['%' + str(idx)] = self.offset
---
>             self.vars['%' + str(idx+1)] = self.offset
223,228d222
< 
<         # alloc register to the return value & initialize it with 0.
<         self.vars['%' + str(idx+1)] = self.offset
<         M[self.offset] = 0
<         self.offset += 1
< 
316c310
<     def run_define(self, source):
---
>     def run_define(self, source, args):
337,338c331
<         # We never generate this code without * (ref)
<         # but we need to define it
---
>         # We never generate this code without * (ref) but we need to define it
406c399
<     def run_read_int(self, source):
---
>     def _read_int(self):
418,419c411
<         self._alloc_reg(source)
<         self._store_value(source, v2)
---
>         return v2
421c413,421
<     def run_read_float(self, source):
---
>     def run_read_int(self, source):
>         _value = self._read_int()
>         self._store_value(source, _value)
> 
>     def run_read_int_(self, source, **kwargs):
>         _value = self._read_int()
>         self._store_deref(source, _value)
> 
>     def _read_float(self):
433,434c433,441
<         self._alloc_reg(source)
<         self._store_value(source, v2)
---
>         return v2
> 
>     def run_read_float(self, source):
>         _value = self._read_float()
>         self._store_value(source, _value)
> 
>     def run_read_float_(self, source, **kwargs):
>         _value = self._read_float()
>         self._store_deref(source, _value)
441d447
<         self._alloc_reg(source)
443a450,456
>     def run_read_char_(self, source, **kwargs):
>         global inputline
>         self._get_input()
>         v1 = inputline[0]
>         inputline = inputline[1:]
>         self._store_deref(source, v1)
> 
